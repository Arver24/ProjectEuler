cols = 20
rows = 20
maxprod = 0
prod1 = 0
prod2 = 0
maxindex1 = 0
maxindex2 = 0
unpreppedData = """08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08
49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00
81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65
52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91
22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80
24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50
32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70
67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21
24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72
21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95
78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92
16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57
86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58
19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40
04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66
88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69
04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36
20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16
20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54
01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48"""
preppedData = unpreppedData.split("\n")
data = []
for i in range(len(preppedData)):
    data.append(preppedData[i].split(" "))
    # print(preppedData[i])
    # //print(data[i] * 2)
data = [list(map(int, x)) for x in data]  # ! Converts string array into int array

# * Horizontal & Vertical Products
for k in range(0, cols):
    for j in range(3, rows):
        prod1 = data[k][j - 3] * data[k][j - 2] * data[k][j - 1] * data[k][j]
        prod2 = data[j - 3][k] * data[j - 2][k] * data[j - 1][k] * data[j][k]
        if prod1 > maxprod:
            maxprod = prod1
            # maxindex1 = data[k]
            prod1 = 0
        elif prod2 > maxprod:
            maxprod = prod2
            prod2 = 0
# //print(maxprod, prod1, prod2)
# * backslash products
for l in range(3, cols):
    for m in range(3, rows):
        prod1 = (
            data[l - 3][m - 3] * data[l - 2][m - 2] * data[l - 1][m - 1] * data[l][m]
        )
        prod2 = (
            data[m - 3][l - 3] * data[m - 2][l - 2] * data[m - 1][l - 1] * data[m][l]
        )
        if prod1 > maxprod:
            maxprod = prod1
            # maxindex1 = data[k]
            prod1 = 0
        elif prod2 > maxprod:
            maxprod = prod2
            prod2 = 0
# * forwardslash Products
for n in range(cols - 4, 0, -1):
    for o in range(3, rows):

        prod1 = (
            data[n + 3][o - 3] * data[n + 2][o - 2] * data[n + 1][o - 1] * data[n][o]
        )
        prod2 = (
            data[o - 3][n + 3] * data[o - 2][n + 2] * data[o - 1][n + 1] * data[o][n]
        )
        if prod1 > maxprod:
            maxprod = prod1
            # //maxindex1 = data[k]
            prod1 = 0
        elif prod2 > maxprod:
            maxprod = prod2
            prod2 = 0
        # //print(prod1, prod2)
# //print(prod1, prod2)
# //for p in range(3, cols):
#     //for q in range(0, rows):
#         //prod = data[m - 3][l] * data[m - 2][l] * data[m - 1][l] * data[m][l]
#         //if prod > maxprod:
#            // maxprod = prod
#             // maxindex2 = [l, m]
#             //prod = 0
# //print(maxprod, prod1, prod2)
# //print(data)
print(maxprod)
# ###
# 279496 279496
# 57816 16194745
# 2904000 5443200
# 1432981 1444352
# 1809864 5695272
# 540270 235200
# 0 434304
# 11587200 2373140
# 0 1923264
# 85425 85680
# 271360 0
# 2414720 6023808
# 641130 4788480
# 597402 4904432
# 244608 94464
# 22464 3858624
# 9172800 685860
# 16194745 57816
# 1781787 1781787
# 1936836 32719995
# 8316000 4300800
# 1314797 55552
# 1952748 17085816
# 3313656 735000
# 4580064 298584
# 15642720 3400320
# 4287360 2804760
# 45560 20400
# 2713600 0
# 13522432 21459816
# 6044940 2115840
# 252747 18585216
# 61152 1842048
# 149760 3639384
# 5443200 2904000
# 32719995 1936836
# 109089 109089
# 880380 15358365
# 415800 3809280
# 3403004 130816
# 1808100 0
# 6075036 562500
# 4258656 401940
# 20335536 4389504
# 1774080 7323540
# 225120 42000
# 1356800 0
# 4829440 9580275
# 2389860 793440
# 43956 11079648
# 63700 2609568
# 1444352 1432981
# 4300800 8316000
# 15358365 880380
# 235773 235773
# 120600 1940004
# 196560 23569920
# 1636888 310688
# 5166000 0
# 14035428 871875
# 2701728 616770
# 15466464 8969856
# 3104640 13679820
# 221760 168000
# 460800 15949128
# 2085440 2720325
# 5098368 8926200
# 1025640 8798544
# 5695272 1809864
# 55552 1314797
# 3809280 415800
# 1940004 120600
# 205020 205020
# 2864250 710424
# 206388 17284608
# 13987952 743432
# 4797000 0
# 12814956 1220625
# 900576 4728570
# 9097920 5125632
# 5045040 23451120
# 14636160 38500
# 705600 20640048
# 3500560 32775
# 1507968 7079400
# 235200 540270
# 17085816 1952748
# 130816 3403004
# 23569920 196560
# 710424 2864250
# 389940 389940
# 726750 143520
# 255528 4051080
# 12259104 20444380
# 11232000 0
# 11561319 455700
# 350224 1504545
# 14826240 160176
# 7796880 16080768
# 32565456 261800
# 1111320 15746016
# 9001440 9200
# 434304 0
# 735000 3313656
# 0 1808100
# 310688 1636888
# 17284608 206388
# 143520 726750
# 5849100 5849100
# 565250 586560
# 1788696 3789720
# 0 12322640
# 9135360 531805
# 11561319 589372
# 640976 1977402
# 6462720 212064
# 6713980 10606464
# 12793572 231880
# 5278770 23365056
# 2373140 11587200
# 298584 4580064
# 562500 6075036
# 0 5166000
# 743432 13987952
# 4051080 255528
# 586560 565250
# 261900 261900
# 4522000 4301440
# 275184 1684320
# 0 14916880
# 3654144 977835
# 2415798 627396
# 97776 1599696
# 6343040 446688
# 5371184 5249664
# 17833464 382602
# 1923264 0
# 3400320 15642720
# 401940 4258656
# 871875 14035428
# 0 4797000
# 20444380 12259104
# 3789720 1788696
# 4301440 4522000
# 314280 314280
# 0 6121280
# 74256 497640
# 0 7124480
# 2248704 1393935
# 1380456 1613304
# 354438 1599696
# 13478960 1982178
# 3364368 3499776
# 85680 85425
# 2804760 4287360
# 4389504 20335536
# 616770 2701728
# 1220625 12814956
# 0 11232000
# 12322640 0
# 1684320 275184
# 6121280 0
# 142560 142560
# 0 26321504
# 19992 530816
# 0 5958656
# 1194624 2230296
# 898128 4724676
# 430389 10969344
# 8883860 40304286
# 0 271360
# 20400 45560
# 7323540 1774080
# 8969856 15466464
# 4728570 900576
# 455700 11561319
# 531805 9135360
# 14916880 0
# 497640 74256
# 26321504 0
# 164736 164736
# 0 7280416
# 109956 503360
# 776736 6229504
# 1742976 2046984
# 1496880 4188888
# 177480 10253952
# 6023808 2414720
# 0 2713600
# 42000 225120
# 13679820 3104640
# 5125632 9097920
# 1504545 350224
# 589372 11561319
# 977835 3654144
# 7124480 0
# 530816 19992
# 7280416 0
# 1427712 1427712
# 0 992784
# 907137 331760
# 338256 3995008
# 10675728 2908872
# 7056720 6600672
# 4788480 641130
# 21459816 13522432
# 0 1356800
# 168000 221760
# 23451120 5045040
# 160176 14826240
# 1977402 640976
# 627396 2415798
# 1393935 2248704
# 5958656 0
# 503360 109956
# 992784 0
# 1903616 1903616
# 5076540 858624
# 4962573 2169200
# 331992 1997504
# 30692718 43416
# 4904432 597402
# 2115840 6044940
# 9580275 4829440
# 15949128 460800
# 38500 14636160
# 16080768 7796880
# 212064 6462720
# 1599696 97776
# 1613304 1380456
# 2230296 1194624
# 6229504 776736
# 331760 907137
# 858624 5076540
# 1730560 1730560
# 5245758 738816
# 17959788 3118225
# 206064 3864736
# 94464 244608
# 18585216 252747
# 793440 2389860
# 2720325 2085440
# 20640048 705600
# 261800 32565456
# 10606464 6713980
# 446688 6343040
# 1599696 354438
# 4724676 898128
# 2046984 1742976
# 3995008 338256
# 2169200 4962573
# 738816 5245758
# 133120 133120
# 11108664 1619712
# 3731904 1077205
# 3858624 22464
# 1842048 61152
# 11079648 43956
# 8926200 5098368
# 32775 3500560
# 15746016 1111320
# 231880 12793572
# 5249664 5371184
# 1982178 13478960
# 10969344 430389
# 4188888 1496880
# 2908872 10675728
# 1997504 331992
# 3118225 17959788
# 1619712 11108664
# 25600 25600
# 7593264 9043392
# 685860 9172800
# 3639384 149760
# 2609568 63700
# 8798544 1025640
# 7079400 1507968
# 9200 9001440
# 23365056 5278770
# 382602 17833464
# 3499776 3364368
# 40304286 8883860
# 10253952 177480
# 6600672 7056720
# 43416 30692718
# 3864736 206064
# 1077205 3731904
# 9043392 7593264
# 38400 38400
